// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int      @id @default(autoincrement())
  first_name          String
  last_name           String
  country             String
  referido            String?
  email               String   @unique
  password            String
  category            Category? @relation(fields: [categoryId], references: [id])
  categoryId          Int?
  books               Book[]
  is_admin            Boolean  @default(false)
  reset_password_code Int?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Book {
  id            Int         @id @default(autoincrement())
  title         String
  pasta         String
  price         Float
  isbn          BigInt?         @unique
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  inventories   Inventory[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Category {
  id                           Int      @id @default(autoincrement())
  type                         Int
  percentage_royalties         Int
  percentage_management_stores Int
  management_min               Float
  users                        User[]
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt
}

model Bookstore {
  id              Int         @id @default(autoincrement())
  name            String
  deal_percentage Int
  contact_name    String
  contact_phone   BigInt
  contact_email   String
  inventories     Inventory[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Inventory {
  id          Int       @id @default(autoincrement())
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      Int
  bookstore   Bookstore @relation(fields: [bookstoreId], references: [id])
  bookstoreId Int
  country     String
  initial     Int
  sales       Sale[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([bookId, bookstoreId, country])
}

model Sale {
  id          Int       @id @default(autoincrement())
  inventory   Inventory @relation(fields: [inventoryId], references: [id])
  inventoryId Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
